#!/usr/bin/env python3
"""Test for circular_binaries_encounters_circ_prograde function
    in physics/dynamics.py
"""
######## Imports ########
#### Standard Library ####
import time
#### Third-Party ####
import numpy as np
#### Homemade ####
#### Local ####
from mcfacts.physics.dynamics import circular_binaries_encounters_circ_prograde

######## Setup ########
INPUT_DATA = {
    "smbh_mass" : 100000000.0,
    "disk_bh_pro_orbs_a" : np.asarray(
    [   68.02904593,  1324.30495964,  1263.60332314,  1383.85719536,
  7154.69919077,  7716.38923463, 11070.63861006, 11198.18728959,
 11865.94183805,  9326.08215556,  8433.6040646,   8130.27274392,
 23910.78694931, 10792.49272873, 13487.57296836, 16604.92354732,
 16716.30071876, 19775.91464513, 25876.99600416, 34225.86700359,
 11790.44331508, 41746.71303119, 20627.47182281, 20855.30506961,
 40841.59947332, 28867.94636666, 23834.7530175,  13710.79104485,
 30342.67147154, 23104.85108076, 42992.01412181, 42967.33757557,
 41396.82390082, 47990.08920809, 41112.91261891, 35853.74896239,
 22013.85708649, 16062.41570807, 21129.18177279, 14661.31493252,
 34493.91680968, 43207.59332199, 44908.75085995, 31110.74695521,
 36050.54004851, 38634.6026446,  17114.8296664,  38413.01174351,
 46627.55136955, 36616.22872425, 36862.71859552, 19348.46581413,
 26979.2213378,  27295.663926,   16689.43379044, 47940.24514025,
 20768.17912689, 23044.66467356, 27635.27371645, 43145.53205215,
 11582.74911137, 40665.76090776, 33267.28703638, 29666.89789778,
 20940.45829871, 15217.48396927, 47292.77219877, 22421.58349397,
 39443.50637351, 33252.49598338, 28551.55783755, 43548.26784827,
 37709.02273042, 37601.75549676, 33511.8223296,  33421.78457179,
  6807.76940157, 12016.37831702, 12505.50587339,   399.42257701,
  5645.30398289, 12426.73499179, 13404.14270993,  9043.48542104,
  5698.28745316, 12114.902622,    7978.60615274,  6121.33369674,
   818.30141569,  1338.51084325, 12367.35110018,  4559.82960079,
  1185.43987402,  1521.47787002,  7798.66026977,  5052.75771648,
   655.64518362,  3637.88333521,  4533.68760803, 26091.60117537,
 16480.80002286, 17464.18686748, 44998.97827679, 18800.51254127,
  1248.90882189, 24947.98810445, 22623.05913986, 25266.80270749,
 46750.30792771, 33098.49550118, 21880.42395235, 28869.55951292,
 30035.19806218, 28108.21742326, 25019.2755526,  46691.02209948,
  1074.01488877, 30131.04342799, 48841.30080836, 33838.71491537,
 22986.94385897, 26615.3506119,  46460.84399516, 13679.57059004,
   952.67255615, 32222.63235239, 42687.36803742, 42700.36641256,
 34673.49077213, 37091.00853653, 44871.44728209, 41580.57139818,
 49842.5150284,  49860.10053507,  1097.67988381,   106.53996899,
 17613.04970761, 20679.43431115, 25151.03364236, 24095.82353863,
 24188.68082323,  1454.56802078,  1198.04458704,    94.79326743,
 12736.59095479, 18177.1043758,  16423.76456008, 49863.18618733,
 43785.59950142,  2960.40983832, 40201.86490177,  8529.60314205,
 28341.35546417]),
    "disk_bh_pro_masses" : np.asarray(
    [10.23228685, 11.55175869, 15.68220629, 18.48848044, 15.68631594, 32.8276305,
 14.95760961, 22.2636706,  16.70221157, 10.90809667, 15.55001819, 13.30560965,
 34.99003246, 10.50904456, 12.83678082, 11.64562316, 13.18830621, 10.2115654,
 13.1927185,  13.11919265, 12.89479662, 29.7578521,  11.06132545, 16.9044607,
 21.92972593, 14.74989716, 14.20477893, 15.28046212, 27.28451489, 34.57519483,
 23.43203304, 19.23235475, 18.69074516, 27.31381216, 15.56923119, 21.29617297,
 11.22362686, 10.63765531, 14.63484432, 12.12992945, 10.24433034, 16.37620562,
 19.32642018, 11.18279953, 21.70397812, 13.3123952,  10.50900462, 27.03519567,
 13.64986167, 15.30830588, 20.73158867, 11.2927897,  17.09123677, 18.58288697,
 12.20503631, 12.6209383,  10.85570405, 18.9764727,  17.78327864, 12.1497894,
 22.15255191, 12.33550936, 10.77572929, 18.4758339,  11.8789485,  15.02714711,
 13.25453852, 10.77835229, 19.06574269, 22.7662798,  17.11687579, 12.41576083,
 11.29113043, 11.81217019, 10.38334663, 15.7053237,  20.46460435, 15.67175381,
 15.5447916,  10.94178099, 10.56823984, 11.46931388, 12.42699728, 27.35879771,
 10.6825415,  24.47462519, 28.69842689, 13.44203571, 34.65190639, 11.46628157,
 10.79942956, 10.49658673, 12.30336939, 10.87817419, 10.61232654, 13.15066291,
 16.11588907, 10.43369266, 16.64583181, 28.90065115, 20.37165717, 12.06549006,
 13.51581411, 14.53150876, 10.37999814, 12.60003479, 10.18618185, 10.3232672,
 15.70058496, 13.92667979, 12.74431411, 26.77791745, 27.59447759, 23.59526587,
 17.06416371, 30.11877466, 27.47252002, 36.71420859, 15.91946269, 19.22064402,
 17.09438947, 11.92934421, 16.01082298, 16.10498634, 28.0174834,  21.19513345,
 11.63191252, 10.45848143, 10.77990375, 11.24271346, 32.17365717, 15.11784012,
 27.37468245, 10.52867836, 26.53771572, 14.25893271, 10.62404232, 11.76312517,
 10.13049099, 10.47783661, 10.95372484, 33.98040619, 22.54350576, 11.44927081,
 37.51583386, 13.50439402, 13.63880381, 14.77326958, 10.10495639, 43.70978608,
 22.7859699,  28.38563747, 37.62512448]),
    "disk_bh_pro_orbs_ecc" : np.asarray(
    [0.01440527, 0.01,       0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.01,       0.04782969, 0.01,
 0.02071925, 0.01,       0.01,       0.01,       0.02576911, 0.04035318,
 0.01123947, 0.08865095, 0.01,       0.09,       0.03442114, 0.07702389,
 0.02843862, 0.09231714, 0.01326569, 0.01756993, 0.08778342, 0.03813121,
 0.05140888, 0.06650129, 0.01365766, 0.01893674, 0.03560529, 0.0491358,
 0.01516401, 0.01833689, 0.01123888, 0.01,       0.08633636, 0.14978303,
 0.14414352, 0.15275294, 0.05704593, 0.050087,   0.08305506, 0.01,
 0.01210226, 0.10014274, 0.02978561, 0.05620461, 0.01506372, 0.04952633,
 0.01748791, 0.0322833,  0.07556473, 0.06764244, 0.08980959, 0.04777291,
 0.01,       0.03596623, 0.06533922, 0.01,       0.07390264, 0.06856785,
 0.01451795, 0.02522332, 0.0497141,  0.03507653, 0.02415199, 0.09291809,
 0.02715437, 0.03564977, 0.0812984,  0.04529081, 0.01,       0.01,
 0.01,       0.18356093, 0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.0817844,  0.1,        0.01,
 0.03989945, 0.08090528, 0.01,       0.04084516, 0.0627761,  0.08504784,
 0.03231744, 0.04034909, 0.07202682, 0.01865849, 0.03070722, 0.01152761,
 0.01139324, 0.01547886, 0.01,       0.01,       0.0443231,  0.03959122,
 0.04614628, 0.03610448, 0.0444172,  0.01,       0.01,       0.04790177,
 0.05349333, 0.24246162, 0.06473986, 0.04889491, 0.03454637, 0.05602389,
 0.05171205, 0.07761759, 0.01,       0.01,       0.03527735, 0.01167224,
 0.03230977, 0.03257847, 0.13242362, 0.01,       0.01,       0.01,
 0.01,       0.11406824, 0.13439327, 0.1,        0.09822498, 0.01,
 0.1,        0.01,       0.1,       ]),
    "bin_mass_1" : np.asarray(
    [13.3444011,  13.39410744, 11.08240961, 11.46115106, 47.21109759, 16.60714815,
 27.3547424, ]),
    "bin_mass_2" : np.asarray(
    [13.3444011,  13.39410744, 11.08240961, 11.46115106, 47.21109759, 16.60714815,
 27.3547424, ]),
    "bin_orb_a" : np.asarray(
    [ 7100.4802517,   9038.2154531,  11005.62321287,  7819.65935509,
  9921.25829462,  1379.65494656,  6614.38170526]),
    "bin_sep" : np.asarray(
    [ 6.20535859,  3.07935446,  2.87735872, 18.81166511, 42.00146821,  5.64860094,
 31.85925747]),
    "bin_ecc" : np.asarray(
    [0.46148583, 0.54784264, 0.73584526, 0.13088044, 0.88858606, 0.08794263,
 0.69850117]),
    "bin_orb_ecc" : np.asarray(
    [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]),
    "timestep_duration_yr" : 10000.0,
    "disk_bh_pro_orb_ecc_crit" : 0.01,
    "delta_energy_strong" : 0.1,
    "disk_radius_outer" : 50000.0,
    "mean_harden_energy_delta" : 0.9,
    "var_harden_energy_delta" : 0.025,
}

OUTPUT_DATA = {
    "bin_sep" : np.asarray(
    [ 6.20535859,  3.07935446,  2.87735872, 20.69283162, 42.00146821,  0.33547813,
 31.85925747]),
    "bin_ecc" : np.asarray(
    [0.46148583, 0.54784264, 0.73584526, 0.1177924,  0.88858606, 0.17066223,
 0.69850117]),
    "bin_orb_ecc" : np.asarray(
    [0.01,  0.01,  0.01,  0.011, 0.01,  0.011, 0.01, ]),
    "disk_bh_pro_orbs_a" : np.asarray(
    [   68.02904593,  1324.30495964,  1263.60332314,  1522.2429149,
  7154.69919077,  6944.75031117, 11070.63861006, 11198.18728959,
 11865.94183805,  9326.08215556,  8433.6040646,   8130.27274392,
 23910.78694931, 10792.49272873, 13487.57296836, 16604.92354732,
 16716.30071876, 19775.91464513, 25876.99600416, 34225.86700359,
 11790.44331508, 41746.71303119, 20627.47182281, 20855.30506961,
 40841.59947332, 28867.94636666, 23834.7530175,  13710.79104485,
 30342.67147154, 23104.85108076, 42992.01412181, 42967.33757557,
 41396.82390082, 47990.08920809, 41112.91261891, 35853.74896239,
 22013.85708649, 16062.41570807, 21129.18177279, 14661.31493252,
 34493.91680968, 43207.59332199, 44908.75085995, 31110.74695521,
 36050.54004851, 38634.6026446,  17114.8296664,  38413.01174351,
 46627.55136955, 36616.22872425, 36862.71859552, 19348.46581413,
 26979.2213378,  27295.663926,   16689.43379044, 47940.24514025,
 20768.17912689, 23044.66467356, 27635.27371645, 43145.53205215,
 11582.74911137, 40665.76090776, 33267.28703638, 29666.89789778,
 20940.45829871, 15217.48396927, 47292.77219877, 22421.58349397,
 39443.50637351, 33252.49598338, 28551.55783755, 43548.26784827,
 37709.02273042, 37601.75549676, 33511.8223296,  33421.78457179,
  6807.76940157, 12016.37831702, 12505.50587339,   399.42257701,
  5645.30398289, 12426.73499179, 13404.14270993,  9043.48542104,
  5698.28745316, 12114.902622,    7978.60615274,  6121.33369674,
   818.30141569,  1338.51084325, 12367.35110018,  4559.82960079,
  1185.43987402,  1521.47787002,  7798.66026977,  5052.75771648,
   655.64518362,  3637.88333521,  4533.68760803, 26091.60117537,
 16480.80002286, 17464.18686748, 44998.97827679, 18800.51254127,
  1248.90882189, 24947.98810445, 22623.05913986, 25266.80270749,
 46750.30792771, 33098.49550118, 21880.42395235, 28869.55951292,
 30035.19806218, 28108.21742326, 25019.2755526,  46691.02209948,
  1074.01488877, 30131.04342799, 48841.30080836, 33838.71491537,
 22986.94385897, 26615.3506119,  46460.84399516, 13679.57059004,
   952.67255615, 32222.63235239, 42687.36803742, 42700.36641256,
 34673.49077213, 37091.00853653, 44871.44728209, 41580.57139818,
 49842.5150284,  49860.10053507,  1097.67988381,   106.53996899,
 17613.04970761, 20679.43431115, 25151.03364236, 24095.82353863,
 24188.68082323,  1454.56802078,  1198.04458704,    94.79326743,
 12736.59095479, 18177.1043758,  16423.76456008, 49863.18618733,
 43785.59950142,  2960.40983832, 40201.86490177,  8529.60314205,
 28341.35546417]),
    "disk_bh_pro_orbs_ecc" : np.asarray(
    [0.01440527, 0.01,       0.01,       0.011,      0.01,       0.009,
 0.01,       0.01,       0.01,       0.01,       0.04782969, 0.01,
 0.02071925, 0.01,       0.01,       0.01,       0.02576911, 0.04035318,
 0.01123947, 0.08865095, 0.01,       0.09,       0.03442114, 0.07702389,
 0.02843862, 0.09231714, 0.01326569, 0.01756993, 0.08778342, 0.03813121,
 0.05140888, 0.06650129, 0.01365766, 0.01893674, 0.03560529, 0.0491358,
 0.01516401, 0.01833689, 0.01123888, 0.01,       0.08633636, 0.14978303,
 0.14414352, 0.15275294, 0.05704593, 0.050087,   0.08305506, 0.01,
 0.01210226, 0.10014274, 0.02978561, 0.05620461, 0.01506372, 0.04952633,
 0.01748791, 0.0322833,  0.07556473, 0.06764244, 0.08980959, 0.04777291,
 0.01,       0.03596623, 0.06533922, 0.01,       0.07390264, 0.06856785,
 0.01451795, 0.02522332, 0.0497141,  0.03507653, 0.02415199, 0.09291809,
 0.02715437, 0.03564977, 0.0812984,  0.04529081, 0.01,       0.01,
 0.01,       0.18356093, 0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.01,       0.01,       0.01,
 0.01,       0.01,       0.01,       0.0817844,  0.1,        0.01,
 0.03989945, 0.08090528, 0.01,       0.04084516, 0.0627761,  0.08504784,
 0.03231744, 0.04034909, 0.07202682, 0.01865849, 0.03070722, 0.01152761,
 0.01139324, 0.01547886, 0.01,       0.01,       0.0443231,  0.03959122,
 0.04614628, 0.03610448, 0.0444172,  0.01,       0.01,       0.04790177,
 0.05349333, 0.24246162, 0.06473986, 0.04889491, 0.03454637, 0.05602389,
 0.05171205, 0.07761759, 0.01,       0.01,       0.03527735, 0.01167224,
 0.03230977, 0.03257847, 0.13242362, 0.01,       0.01,       0.01,
 0.01,       0.11406824, 0.13439327, 0.1,        0.09822498, 0.01,
 0.1,        0.01,       0.1,       ]),
}

######## Functions ########

######## Tests ########
def test_inputs():
    for key in INPUT_DATA:
        print(key)
    for key in OUTPUT_DATA:
        print(key)
        if key in INPUT_DATA:
            assert not np.allclose(INPUT_DATA[key],OUTPUT_DATA[key]), \
                "test circular_binaries_encounters_circ_prograde: Bad OUTPUT DATA\n" +\
                "All input and output values are identical"

def test_function():
    tic = time.perf_counter()
    (bin_sep, bin_ecc, bin_orb_ecc, disk_bh_pro_orbs_a, disk_bh_pro_orbs_ecc) = \
        circular_binaries_encounters_circ_prograde(
            INPUT_DATA["smbh_mass"],
            INPUT_DATA["disk_bh_pro_orbs_a"].copy(),
            INPUT_DATA["disk_bh_pro_masses"].copy(),
            INPUT_DATA["disk_bh_pro_orbs_ecc"].copy(),
            INPUT_DATA["bin_mass_1"].copy(),
            INPUT_DATA["bin_mass_2"].copy(),
            INPUT_DATA["bin_orb_a"].copy(),
            INPUT_DATA["bin_sep"].copy(),
            INPUT_DATA["bin_ecc"].copy(),
            INPUT_DATA["bin_orb_ecc"].copy(),
            INPUT_DATA["timestep_duration_yr"],
            INPUT_DATA["disk_bh_pro_orb_ecc_crit"],
            INPUT_DATA["delta_energy_strong"],
            INPUT_DATA["disk_radius_outer"],
            INPUT_DATA["mean_harden_energy_delta"],
            INPUT_DATA["var_harden_energy_delta"],
    )
    toc = time.perf_counter()
    assert np.allclose(disk_bh_pro_orbs_a, OUTPUT_DATA["disk_bh_pro_orbs_a"]), \
            "test circular_binaries_encounters_circ_prograde: OUTPUT_DATA mismatch"
    assert np.allclose(disk_bh_pro_orbs_ecc, OUTPUT_DATA["disk_bh_pro_orbs_ecc"]), \
            "test circular_binaries_encounters_circ_prograde: OUTPUT_DATA mismatch"
    assert np.allclose(bin_sep, OUTPUT_DATA["bin_sep"]), \
            "test circular_binaries_encounters_circ_prograde: OUTPUT_DATA mismatch"
    assert np.allclose(bin_ecc, OUTPUT_DATA["bin_ecc"]), \
            "test circular_binaries_encounters_circ_prograde: OUTPUT_DATA mismatch"
    assert np.allclose(bin_orb_ecc, OUTPUT_DATA["bin_orb_ecc"]), \
            "test circular_binaries_encounters_circ_prograde: OUTPUT_DATA mismatch"
    print("test_circular_binaries_encounters_circ_prograde: pass")
    diff_mask_bh = ~(
        np.isclose(disk_bh_pro_orbs_a, INPUT_DATA["disk_bh_pro_orbs_a"]) & \
        np.isclose(disk_bh_pro_orbs_ecc, INPUT_DATA["disk_bh_pro_orbs_ecc"])
    )
    diff_mask_bin = ~(
        np.isclose(bin_sep, INPUT_DATA["bin_sep"]) & \
        np.isclose(bin_ecc, INPUT_DATA["bin_ecc"]) & \
        np.isclose(bin_orb_ecc, INPUT_DATA["bin_orb_ecc"])
    )
    diff_mask = np.concatenate((diff_mask_bh,diff_mask_bin))
    print(f"{np.sum(diff_mask)} / {np.size(diff_mask)} changes")
    print(f"Time: {toc-tic} seconds!")

def test_performance(n=80):
    tic = time.perf_counter()
    bin_sep, bin_ecc, bin_orb_ecc, disk_bh_pro_orbs_a, disk_bh_pro_orbs_ecc = \
        circular_binaries_encounters_circ_prograde(
            INPUT_DATA["smbh_mass"],
            np.tile(INPUT_DATA["disk_bh_pro_orbs_a"],n),
            np.tile(INPUT_DATA["disk_bh_pro_masses"],n),
            np.tile(INPUT_DATA["disk_bh_pro_orbs_ecc"],n),
            np.tile(INPUT_DATA["bin_mass_1"],n),
            np.tile(INPUT_DATA["bin_mass_2"],n),
            np.tile(INPUT_DATA["bin_orb_a"],n),
            np.tile(INPUT_DATA["bin_sep"],n),
            np.tile(INPUT_DATA["bin_ecc"],n),
            np.tile(INPUT_DATA["bin_orb_ecc"],n),
            INPUT_DATA["timestep_duration_yr"],
            INPUT_DATA["disk_bh_pro_orb_ecc_crit"],
            INPUT_DATA["delta_energy_strong"],
            INPUT_DATA["disk_radius_outer"],
            INPUT_DATA["mean_harden_energy_delta"],
            INPUT_DATA["var_harden_energy_delta"],
    )
    toc = time.perf_counter()
    print(f"Time: {toc-tic} seconds!")


######## Algorithm ########
def tests():
    test_inputs()
    test_function()
    #test_performance()

######## Main ########
def main():
    tests()
    return
######## Execution ########
if __name__ == "__main__":
    main()
