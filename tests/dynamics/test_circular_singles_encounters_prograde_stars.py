#!/usr/bin/env python3
"""Test for circular_singles_encounters_prograde_stars function
    in physics/dynamics.py
"""
######## Imports ########
#### Standard Library ####
import time
#### Third-Party ####
import numpy as np
#### Homemade ####
#### Local ####
from mcfacts.physics.dynamics import circular_singles_encounters_prograde_stars

######## Setup ########
INPUT_DATA = {
    "disk_star_pro_orbs_a" : np.asarray(
    [28157.79468833 20781.31638853 37144.6317936  44643.10199191
 14162.07949659 35284.15082218 12034.95969668 20552.37425343
 35358.25953302 15014.62961279 18162.00077953  3962.52045459
 37198.27911494 17542.63742707 40099.37196069 25684.85898994
 31370.00426769 41465.07717821 41427.74000831 41851.71837688
 14477.80914851 48907.32690898 44455.1190151  20720.60177462
 37213.06387352 17880.15932152 21398.71119938 39279.82203184
 49590.36880497 29974.41730733 22824.75554213 26486.02153007
 36882.55766705 22628.5519295  43357.31980107 17411.1093566
 45752.33603012 22335.80431186 18439.59649231 30386.38459044
 49408.39590393 13847.75882796 26790.65794894 44161.74006893
 20482.9878264  30468.18583778 48664.96413562 17086.99735842
 40143.84021655 16581.1394751  19138.66345465 40756.4577934
 47109.74135437 31034.89441947  4953.86860328 34006.35342391
 11685.57294748 24140.166116   36152.42598911  9078.82361662
 23280.19014256 40706.8981324  42046.64398275 49869.0863253
 27907.37557384 17244.22546749 38889.4512827  28230.0041308
 44820.75492231 26800.43345367 30511.29773815 44461.89909907
 27680.84475934 14430.93224303 41342.60043883 41956.24195201
 34177.61577863 23531.72261527 23095.67422341 39265.5180901
 10135.04071811 37039.68036308 49927.4601742  18142.32040751
 49185.42101175 35763.0842641  36147.46009445 15495.75989857
 25854.72366749 46270.62928613 49736.8082783  28724.92291104
 43239.78960257 37016.53593858 45611.53225629 44471.73496245
 32024.7975464  49132.60753848 36990.45488927 37687.4271141
 46429.65197223 27849.00399523 12320.97791418 31046.71345873
 18244.60024691 45051.62584313 16226.63923387 36951.89307971
 38089.20011983 25483.33989517 38857.22158411 30296.25059319
 44610.8236241  29055.08340746 22263.97035511 28829.87796484
 28519.34173654 23237.69777861 41411.12757765 40467.60067813
 43720.26067283 26472.17625319 40143.72143154 36055.63689911
 44438.98507383 43607.37558179 42090.600581   27374.21414978
 47892.35775145 12514.50057347 28055.48535055 19719.35730076
 41226.17531954 40579.20001048 49476.6498483  20442.08524406
 35601.96826121 23370.33098809 23388.81618188 18098.00514267
 22918.1251906  48900.55695293 46358.01025223 48412.02030675
 46316.07851826 44370.84679363 38674.74077771 41475.84025719
 39812.69581105 25422.19708736 39810.03391256 29695.60731123
 34543.95889712 48378.5788624  46801.65876394 40613.0493848
 38886.30750376 19201.1785673  38557.10048349 23850.42035961
 40431.81637773 23607.83254045 44420.53074267 47691.82502587
 30020.58170016 12787.60720679  9828.20234453 31489.0952624
 45750.64408299 12056.90732168 35571.42699184 47092.47616562
 47255.42565746 18175.06170385 44092.61632775  2433.32341163
 32393.83759025 43166.25583588 40311.53496299 15006.50652423
 38926.57441038 36006.18085759 22125.76286031 49323.4962719
 48596.25431839 36643.75159468 34153.47482745 39917.50545868
 40594.03216513 23012.31969687  7406.71233659 29070.82907626
 37535.48363525 46710.6446709  38949.01928741 26412.08703277
 42922.70357401 44936.37294153 34612.54316426 47858.09898089
 44114.15437728 32016.81012613 34123.48727008 35420.03853544
 48079.67348333 14785.50165288 17198.67398626 47241.97576659
 45495.3013923  15208.521235    6429.31764942 40255.29749808
 43246.19055491 46455.76908518 25544.97320668 19860.20912747
 33873.96040054 41065.3833717  17237.17180428 43131.47151113
 30775.8062101  10782.40241359 48612.19360474 48192.5168385
 48163.97091262 29153.59063878 26601.73433562 42887.33120712
 42517.67461866 29046.09081455 28272.17929203  7866.81129779
 32618.68465742 34591.35001875 30896.65344345 15739.88397472
 19452.4393016  25812.22130526 32216.48926391 41930.96503226
 10205.20543269 39060.57298722 37185.59848319 48138.08459632
 48590.28652118 23009.21118808 42992.11867486 43517.46341257
 13959.61412232 23331.69310924 41266.55190603  5983.49352903
 32597.12398683 44335.77347894 48193.9467879  29341.51443525
 39411.9197205  34706.81621373 12321.82416811 49888.78895053
 49654.88637199 34652.86392544 32276.04161157 46000.85530135
 29405.38175951 33307.72864526 31452.64959825 34261.0581833
 31070.11272402 24254.68963947 26593.4930181  46447.4521097
 24730.11006624 27675.31395093 42109.00942666 25932.01703211
 16314.09897732  9464.31982686 13834.04411499 47908.21807889
 19822.33256801 40780.27450534 43114.02378942 29163.76295992
 37405.51262712 48481.22417541 20231.07822397 49570.78309623
 21041.59649378 40804.50260743 49183.86466121 42268.62463756
 26619.26792048 36090.47390319 45121.17184679 46209.15094506
 39819.75394417 39320.13051218 33528.86515115 38143.00756754
 47460.91045847 48226.18627721 12871.85732936 23719.25946933
  9883.68482685 41436.49620799 45616.04120138 21931.69686097
 44080.2222621  48314.61389984 48784.57086813 12726.56989062
 46765.59238595 32402.90847321 28700.26259418 34784.88197146
 22073.52211687 42204.44498032 46127.19660179  2933.7084813
 48709.39526411 44474.91255677 36276.40484714 22350.72438552
 24435.45344863 25229.26718691 46199.29248407 12889.92317353
 36723.97160569  4819.28363183 20296.89505412 41087.99995934
 41434.45934535 42217.86520893 22800.62146999 36320.05908617
 42773.41192241 38718.22709099 32305.42692287 46619.46059028
 48465.39516759 44134.36330447 26333.54179531 29385.06204986
 39921.6084667  43142.23644472 36974.89668152 40585.96132481
 49849.67330497 40725.32423248 49379.07572969 29366.41094597
 47024.12951339 31544.13516138  6318.91559046 37607.06806474
 27262.63762459 28458.51635719 33020.82200525 48272.4267434
 39560.47481597 49796.62581628 37085.5664022  34122.93481938
 30851.63179324 29724.75613767 33025.35749159 37171.66551749
 34765.4907378  11306.61972741 36403.48079182 23526.51968919
 28065.75971808 19868.91257505 15117.31381527 44964.20601399
 49930.19794915 36569.60816148 12041.61207085 41460.20671666
 41389.83463157 46916.56822222 45758.6952927  37867.26211362
 48073.77995194 36752.28818355 40499.6257118  15608.81915208
 29417.30774202 25427.19769747 23501.24486519 37860.22908271
 45143.18500468 45998.59469283 25075.37105078 12439.55104254
 48604.33288884 34423.81241635 37645.73076454 27527.66506358
 49565.43927884 24022.7210897  41084.57264727 40642.3192863
 31664.64546367 35171.82926083 36972.96126129 29769.03161862
 14378.38161013 47964.36072389 45475.2537733  49720.45861872
 33944.96728545 14017.42567387 47874.35887278 39186.66822769
 48240.84430799 30443.01148535 47609.50216294 49966.73504391
 48646.53939327 28437.11222562 28824.28126971 31580.05147003
 38402.88530388 44261.04953839 41100.06167555 44682.73805017
 48890.59754279 39227.34525449 46386.04044625 44123.09774479
 44480.0746818  42014.13738714 28892.41637728 36887.24470916
 42094.06486497 48530.4548244  22931.12161809 45057.98966549
 49239.41769152 25246.52080082 46063.37380176 38636.70397404
 46675.67307349 28142.39154265 19870.79216146 38630.65642773
 44882.17945382 34088.46953115 48252.31293427 46712.39667878
 15916.16000075  9566.36567644 44347.20599028 44619.21497184
 37543.06340564 36432.56763228 43622.925258   37286.84614661
 37975.62646498 48804.96828137 19711.48933737 36520.3917615
 30125.14734653 34322.0922397  30944.65493831 36869.33531887
 33187.3155801  49018.51244982 33825.04743198 35670.87203729
 33739.10798143 42428.5054535  45043.86445299 21709.19751246
 28372.83624109 36308.8930388  45311.17002406 37289.71733545
 32669.96974796 48052.58061332 33743.39402095 49335.32928141
 23292.72288607 40039.5540896  15109.83197209 27184.0075783
 14955.17662948 27261.18060139 13398.05760807 45302.96778613]),
    "disk_star_pro_masses" : np.asarray(
    [ 0.92593535  0.76820898  0.65554732  2.25299707  0.62286237  3.62901499
  0.59464862  0.57985232  0.52917446  1.7589741   1.27914704 21.93064143
  0.51739993  0.67826163  1.22442082  0.52311046  0.72757795  1.31979549
  1.26616821  0.69521513  1.44838279  1.03445203  2.72565943  1.73184087
  0.70316259  0.90532988  0.56268269  1.19333855  1.41614963  0.65501223
  0.68485595  0.73449326  0.66521976  1.38426368  1.71214063  1.87378812
  2.80830407  0.8696595   0.72968297  0.52764284  0.76872256  2.58103468
  0.96494196  0.74690259  0.60633333  0.56617739  0.66961763  5.86113543
  0.97615169  1.62400514  1.36396606  1.56185539  0.81144946  0.5702688
  3.12959283  0.53057505  1.7680041   1.03274757  0.50483294  1.33829384
  1.23486727  0.50845937  0.5646294   0.64286356  0.51380549  0.53665849
  0.67046658  0.6369724   1.23534272  0.73334406  0.97670873  0.6877081
  0.86341976  1.97221656  0.92513714  3.05715516  1.06440054  0.54902564
  0.67266878  0.57601336  3.34442352  3.43078877  1.82532824  1.66285196
  0.53560783  0.63735573  0.97212312  2.84899357  1.27660003  0.59643821
  0.65154329  2.12255641  1.00655272  1.95405182  0.59939696  1.54307275
  1.06912309  1.94422254  0.9826009   0.96905493  0.56783489  0.51086736
  1.20762569  1.70766742  0.91840949  0.81860833  1.98022166  0.6562158
  0.60263359  0.53228759  0.65423175  0.50599956  0.91904936  0.55450154
  0.53286548  0.89730684  1.09884127  0.58594414  0.53845702  1.09383184
  0.61745706  0.5623661   0.84711484  0.57839942  0.61318003  1.18359769
  2.59583663  0.87630344  2.3824031   1.08584531  0.6907982   0.65370948
  0.52087038  1.06060369  0.60580496  0.69739559  0.50261534  5.13157512
  0.91065092  0.6812467   0.94145162  0.56755222  1.73468421  0.81710595
  0.96204771  0.6612901   0.89842239  0.52534353  1.13464968  0.65852201
  1.35943604  0.85885611  0.55423833  1.36374576  0.76673617  1.15634901
  0.64188457  1.60849462  0.55307095  0.58318769  1.15910791  4.06410231
  0.59650051  0.95360924  0.57410813  0.54056405  0.72782519  1.43724298
  0.54874627  0.94231709  0.59027723  0.5063857   1.8178998   4.79827685
  0.57053249 24.04919425  0.62956458  0.9025573   0.52299531  1.47990089
  0.84615764  1.84844619  6.17315684  0.82267782  1.50423406  0.75917624
  0.66529645  3.57627487  0.58012425  2.15099042  1.0930169   1.19238866
  0.73795711  1.04757483  0.62387217  0.59357619  0.70150927  0.88286504
  0.55377675  1.98297082  0.96727724  0.68475679  0.59111013  0.52573818
  1.1053197   0.98993371  0.66859102  1.18541818  0.73506799  0.68467118
  0.79586244  0.61469225  0.6400841   8.40769486  0.99080848  1.95904192
  0.65928323  0.60555948  0.69107946  0.84846894  7.38645354  6.71780488
  1.37363266  0.52723189  1.33039848  0.73602688  0.63316009  1.7694278
  0.75118719  1.36544039  0.89708204  0.61708811  1.53442903  1.24920619
  0.586375    1.78615266  0.89071616  1.26228394  0.93980451  0.65320606
  1.12806034  1.07201052  1.16805558  1.43500459  1.59867796  3.13005373
  0.57866172  0.6209335   0.53460006  0.52188482  0.88917307  1.71836068
  1.28213444  0.51534332  2.96828726  0.52185269  0.5779656   0.7778563
  0.72275045  6.01011926  0.52625155  0.72279103  1.15471856  1.58709497
  0.5544018   2.72499959  0.80576723  0.67369735  0.84185869  1.15943132
  0.69271502  1.4788152   0.64954838  0.62595638  0.5151719   1.39510561
  0.78202028  0.91526409  4.62063203  0.90257768  1.21324046  6.41545336
  0.61934201  0.67254882  0.69973147  0.67746771  1.82349052  0.53970104
  6.8762064   0.69088685  1.23062641  0.67638137  0.67495419  1.02913269
  2.1380738   0.91528379  1.59457714  0.50366548  1.00563159  0.55923297
  2.53292124  0.58101096  0.53177087  0.56803305  0.85375653  1.09975194
  0.6171674   1.96893461  0.66546211  1.36857398  1.17331292  0.74757549
  0.70230868  0.62714533  1.37476948  2.18015833  0.51226585  0.54592127
  1.4209825   9.14248008  0.70198492  0.59167069  1.11441323  0.65847585
  0.5896747   2.52898058  1.39325739  1.00887407  2.82467061  5.19709885
  1.53914443  0.65704223  0.68354362  0.54618755  0.93834351  0.62114203
  1.76387067  5.89314232  0.57861983  1.06852438  1.60825168  1.12982654
  1.00420711  0.67869838  1.20669131  0.88259518  3.19028163  1.40340234
  0.98169827  2.0041675   0.99555908  2.19816815  0.71417574  0.51497387
  1.3074591   2.6852929   0.80575035  0.89958198  0.62576142  0.5013153
  2.07124045  0.64215886  0.61994892  1.19611486  0.55084005  2.06396534
  3.03277842  0.8368055   1.18345821  1.46478086  3.17903831  1.51006283
  1.95211667  4.53209113  0.54084343  0.58621296  0.86387059  1.2480794
  0.80119432  1.12650664  1.05864678  0.71316718  0.62953033  1.13899168
  0.59558504  0.54222328  0.52161718  5.37494711  0.52128948  0.65360089
  0.8696215   0.51472458  0.60255009  0.80246763  0.56713128  7.00460397
  1.49651836  0.72445614  2.17201155  1.44889903  0.71663682  0.53304608
  0.67126153  1.17773687  0.65661094  1.20110798  0.57183009  1.37199211
  2.2963893   0.65899978  0.9410321   2.1465107   1.15607841  0.89489757
  1.42354366  0.65863933  3.62149271  0.74987242  0.67630029  0.60475893
  0.56563245  1.07236331  0.58129504  0.91892927  0.71790627  0.81530372
  0.52303891  1.26195133  1.25304145  0.91430104  0.53744824  0.98694851
  1.49097201  0.53704626  0.67814598  0.69689438  0.79289857  0.56785081
  2.2817893   0.74144895  1.38530247  1.29351591  0.64096343  1.68906054
  3.61935521  0.74297837  0.75953008  0.7979026   1.34439404  0.51244879
  0.56724543  1.64448668  0.72610252  0.59390959  1.58415581  0.82069039
  0.54742125  1.3908493   3.65816776  0.58380717  0.77839234  1.70270545
  0.51803822  1.53208174  0.63896829  0.9167027   0.63492969  0.51315735
  1.04169168  0.64326578  1.38467894  0.85748982  1.31778904  0.97183099
  1.61519959  0.54586123  0.69458086  0.57909981  4.41885781  0.55887396
  1.24368092  0.94928171  0.71658271  2.47690079  0.60293297  1.84432665
  1.9584431   2.90915007  0.88356541  0.60035296  1.96575648  0.68530696]),
    "disk_star_pro_radius" : 
}

OUTPUT_DATA = {
    "disk_bh_pro_orbs_a": np.asarray(
    [35172.36470036, 21841.5012635,  29606.77708478, 49800.52374052,
 43688.1012061,  42082.79226079, 34121.46470106, 34561.13744514,
  7149.57421214, 16514.21865054, 35383.13961514, 47386.56103656,
 44636.83829284,  9454.69383481, 28395.67122367,   294.4006048,
 26274.32369432, 40561.07336707,  8601.13654886, 26043.48609589,
 49974.15307615, 49883.38868661, 23033.97427077, 24413.41024101,
  4957.37778911, 34701.67064827, 46312.73883674, 14472.25823726,
 28856.81634082, 34738.79123039, 37759.25682326, 16891.44039144,
 17892.34619795,  4830.5683799,  31882.10628811, 18209.03357903,
  1295.69120173, 17197.21036477, 39226.13224413,  6202.35980117,
 37232.51951252, 45172.97448497, 49500.10949411, 18543.64375564,
 15647.68841569, 10693.42804343, 17611.2047292,  15215.47992608,
  8388.43818134, 30194.55713056, 11008.7892973,  45826.94665295,
 10698.22382915, 35103.62288162, 11011.01031801,  6845.0032109,
 29358.80659681, 42760.41161441, 34409.00555101, 25766.43414043,
  6331.28727189, 25245.7961038,  10020.74317394, 30171.11484911,
 33238.69483469,  2126.56360467, 42839.25223125, 21200.42756043,
 37456.69283269, 48509.17742918, 20175.3946254,  18840.26352506,
 47750.76769077, 40252.45727264, 20785.27696928, 10949.8975199,
 11316.48238392, 29304.01311801, 19417.93970194, 19949.92638793,
 22662.63860784, 11411.51123103, 14790.71047971, 29706.86010206,
 31359.76845377, 15611.14276514, 28821.07059507,   419.36008768,
 18285.03433501, 16849.08379738, 25746.52010603, 36312.39805863,
  5917.33328307, 29475.72235601, 22801.34807561, 19498.34041696,
 31009.55159394, 18074.92454074, 19772.40595743, 31353.30019858,
 29766.30384552, 22643.06245436, 39773.67052252, 43063.21227264,
 33993.41841432, 41199.50961043, 29318.92518475,  5366.7601699,
 32196.60982893, 11083.57679201, 37756.19874412, 35470.14836781,
 38917.20041713, 29559.2248061,  29953.35310514, 11757.31837722,
 31919.06367749,  9697.22099811, 29742.73410207, 20727.51346774,
 30394.53448293, 16889.34863534, 14148.1851971,   5806.62356549,
 11902.19064763, 38037.67749438, 33996.12991842,  5639.80802594,
  6749.00076863,  3419.64362325, 17836.20439694, 36065.94787619,
 10977.81404064, 23148.74522652, 32096.66520985, 14585.8136891, ]),
    "disk_bh_pro_orbs_ecc" : np.asarray(
    [0.01137295, 0.01248925, 0.05630263, 0.09365657, 0.18897722, 0.04216794,
 0.19450047, 0.12159871, 0.0729,     0.16329906, 0.01644095, 0.27944384,
 0.08452198, 0.2037242,  0.14504789, 0.18197932, 0.25580469, 0.06931141,
 0.1,        0.20347967, 0.1414552,  0.1,        0.22028833, 0.0793246,
 0.1,        0.24085428, 0.04769995, 0.23368825, 0.11843704, 0.08984752,
 0.05680836, 0.26738967, 0.20663963, 0.1,        0.10371069, 0.09807832,
 0.1,        0.18595839, 0.18251905, 0.10455929, 0.07296272, 0.12117097,
 0.03272839, 0.23979771, 0.24031864, 0.010487,   0.06499208, 0.04531761,
 0.1,        0.08676289, 0.1,        0.08158351, 0.16144848, 0.18780148,
 0.1,        0.01869673, 0.2680296,  0.09592085, 0.20304755, 0.01098656,
 0.02972812, 0.01264171, 0.01341677, 0.15866005, 0.01197342, 0.1,
 0.16630883, 0.01365884, 0.19525014, 0.10488849, 0.1,        0.05748299,
 0.24785271, 0.08674205, 0.26767091, 0.12207637, 0.06072684, 0.23790518,
 0.08847284, 0.23513561, 0.07132912, 0.1,        0.02209179, 0.14110134,
 0.05288274, 0.13507653, 0.02289019, 0.08603258, 0.0655866,  0.03100378,
 0.07004791, 0.08759408, 0.4281694,  0.80969614, 0.72875275, 0.72811888,
 0.72879367, 0.80917017, 0.9993231,  0.99969396, 0.9996806,  0.99906353,
 0.99986532, 0.99988185, 0.99979823, 0.99986445, 0.99928169, 0.99734654,
 0.99976723, 0.99844843, 0.99981174, 0.99984202, 0.09577914, 0.99952028,
 0.99977605, 0.9973489,  0.99981752, 0.1,        0.99974015, 0.99946393,
 0.99931205, 0.99926698, 0.99909284, 0.99775947, 0.99913137, 0.9997213,
 0.99971244, 0.99610118, 0.1,        0.1,        0.08074296, 0.1,
 0.1,        0.1,        0.1,        0.1,       ]),
}

######## Functions ########

######## Tests ########
def test_inputs():
    for key in INPUT_DATA:
        print(key)
    for key in OUTPUT_DATA:
        print(key)
        assert not np.allclose(INPUT_DATA[key],OUTPUT_DATA[key]), \
            "test circular_singles_encounter_prograde: Bad OUTPUT DATA\n" +\
            "All input and output values are identical"

def test_function():
    tic = time.perf_counter()
    (disk_bh_pro_orbs_a, disk_bh_pro_orbs_ecc) = \
        circular_singles_encounters_prograde_stars(
            INPUT_DATA["smbh_mass"],
            INPUT_DATA["disk_bh_pro_orbs_a"].copy(),
            INPUT_DATA["disk_bh_pro_masses"].copy(),
            INPUT_DATA["disk_bh_pro_orbs_ecc"].copy(),
            INPUT_DATA["timestep_duration_yr"],
            INPUT_DATA["disk_bh_pro_orb_ecc_crit"],
            INPUT_DATA["delta_energy_strong"],
            INPUT_DATA["disk_radius_outer"],
    )
    toc = time.perf_counter()
    assert np.allclose(disk_bh_pro_orbs_a, OUTPUT_DATA["disk_bh_pro_orbs_a"]), \
            "test circular_singles_encounter_prograde: OUTPUT_DATA mismatch"
    assert np.allclose(disk_bh_pro_orbs_ecc, OUTPUT_DATA["disk_bh_pro_orbs_ecc"]), \
            "test circular_singles_encounter_prograde: OUTPUT_DATA mismatch"
    print("test_circular_singlues_encounters_prograde: pass")
    diff_mask = ~(np.isclose(disk_bh_pro_orbs_a, INPUT_DATA["disk_bh_pro_orbs_a"]) & np.isclose(disk_bh_pro_orbs_ecc, INPUT_DATA["disk_bh_pro_orbs_ecc"]))
    print(f"{np.sum(diff_mask)} / {np.size(diff_mask)} blackholes changed")
    print(f"Time: {toc-tic} seconds!")

def test_performance(n=30):
    tic = time.perf_counter()
    (disk_bh_pro_orbs_a, disk_bh_pro_orbs_ecc) = \
        circular_singles_encounters_prograde_stars(
            INPUT_DATA["smbh_mass"],
            np.tile(INPUT_DATA["disk_bh_pro_orbs_a"],n),
            np.tile(INPUT_DATA["disk_bh_pro_masses"],n),
            np.tile(INPUT_DATA["disk_bh_pro_orbs_ecc"],n),
            INPUT_DATA["timestep_duration_yr"],
            INPUT_DATA["disk_bh_pro_orb_ecc_crit"],
            INPUT_DATA["delta_energy_strong"],
            INPUT_DATA["disk_radius_outer"],
    )
    toc = time.perf_counter()
    print(f"Time: {toc-tic} seconds!")


######## Algorithm ########
def tests():
    test_inputs()
    test_function()
    #test_performance()

######## Main ########
def main():
    tests()
    return
######## Execution ########
if __name__ == "__main__":
    main()
